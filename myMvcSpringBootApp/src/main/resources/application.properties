server.servlet.context-path=/myMvcSpringBootApp
server.port=8080
logging.level.org=INFO

spring.mvc.view.prefix=/views/
spring.mvc.view.suffix=.jsp

#spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/mydb
#spring.datasource.username=root
#spring.datasource.password=

spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:~/mydb
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.platform=h2

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


spring.jpa.hibernate.ddl-auto=create

spring.data.jpa.repositories.enabled=true

#Eventuelle configuration ultra simplifiée de la securite spring
# (sans WebSecurityConfigurerAdapter.java):
#security.basic.enabled: It enables basic authentication. Default value is true.
#security.basic.path: It configures paths to apply security. We need to provide comma separated paths.
#security.enable-csrf: It enables CSRF. Default value is false (? , may-be true or false ? ).
#security.require-ssl: It enables and disables SSL. Default value is false.
#security.sessions: Default value is stateless. Values can be always, never, if_required, stateless.
#security.user.name: It configures user name. Default user is user.
#security.user.password: It configures password. Default is generated and displayed in console
#security.user.role: It configures role. Default role is USER. 
# .... no property in application.properties for enable CORS --> need of java config .cors()
# .... cors() is not required behind a http reverse-proxy !!!